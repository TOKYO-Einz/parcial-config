server:
  port: 0

idRandom: ${random.value} 

spring:
  application:
    name: catalog-service
  mongodb:
    embedded:
      version: 4.0.2
  data:
    mongodb:      
      database: test
      port: 27019
  
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  zipkin:
    base_url: http://localhost:9411/
    enabled: true    

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    healthcheck:
      enabled: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

info:
  app:
    name: catalog-service
    description: Hola, soy el microservicio catalog.
    version: 1.0.0    

managment:
  info:
    enabled: true
  endpoints:
    web:
      exposure:
        inclued: "*"
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always  

resilience4j:
  circuitbreaker:
    instances:
      movie-service:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
        allowHealthIndicatorToFail: false
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      movie-service:
        waitDuration: 1000
        maxAttempts: 3
        retryExceptions:
          - feign.FeignException$InternalServerError      

queue:
  serie:
    name: serieQueue
  movie:
    name: movieQueue


